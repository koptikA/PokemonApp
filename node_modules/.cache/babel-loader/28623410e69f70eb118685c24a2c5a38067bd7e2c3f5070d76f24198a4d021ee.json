{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\todoList\\\\my-app\\\\src\\\\components\\\\todos\\\\TodoForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport styles from \"./TodoForm.module.css\";\nimport Button from \"../UI/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoForm({\n  addTodo\n}) {\n  _s();\n  const [text, setText] = useState('');\n  const onSubmitHandler = event => {\n    event.preventDefault();\n    addTodo(text);\n    setText('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.todoFormContainer,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\",\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"\\u0441\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\",\n        title: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\",\n        children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoForm, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["useState","styles","Button","jsxDEV","_jsxDEV","TodoForm","addTodo","_s","text","setText","onSubmitHandler","event","preventDefault","className","todoFormContainer","children","onSubmit","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","type","title","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/todoList/my-app/src/components/todos/TodoForm.jsx"],"sourcesContent":["import { useState } from 'react'\r\nimport styles from \"./TodoForm.module.css\"\r\nimport Button from \"../UI/Button\"\r\n\r\nfunction TodoForm({ addTodo }) {\r\n  const [text, setText] = useState('')\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault()\r\n    addTodo(text)\r\n    setText('')\r\n  }\r\n  return (\r\n    <div className={styles.todoFormContainer}>\r\n      <form onSubmit={onSubmitHandler}>\r\n        <input\r\n          placeholder=\"Введите название задачи\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n        <Button type=\"создать\" title=\"Создать\">\r\n          Создать\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\nexport default TodoForm;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,OAAOC,MAAM,MAAM,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,QAAQA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMU,eAAe,GAAIC,KAAK,IAAK;IACjCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBN,OAAO,CAACE,IAAI,CAAC;IACbC,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;EACD,oBACEL,OAAA;IAAKS,SAAS,EAAEZ,MAAM,CAACa,iBAAkB;IAAAC,QAAA,eACvCX,OAAA;MAAMY,QAAQ,EAAEN,eAAgB;MAAAK,QAAA,gBAC9BX,OAAA;QACEa,WAAW,EAAC,kIAAyB;QACrCC,KAAK,EAAEV,IAAK;QACZW,QAAQ,EAAGC,CAAC,IAAKX,OAAO,CAACW,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eACFrB,OAAA,CAACF,MAAM;QAACwB,IAAI,EAAC,4CAAS;QAACC,KAAK,EAAC,4CAAS;QAAAZ,QAAA,EAAC;MAEvC;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAClB,EAAA,CArBQF,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AAsBjB,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}